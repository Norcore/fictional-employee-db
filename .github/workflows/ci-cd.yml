name: CI/CD Pipeline

on:
  push:
    branches:
      - aws-s3-static  # Change to your main branch name

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      CI: false

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install Dependencies and Build Frontend
        working-directory: client
        run: |
          npm install
          npm run build

      - name: Docker Login
        run: docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_TOKEN}}

      - name: Build Backend Docker Image
        working-directory: server
        run: |
          docker build -t norcore/fictional-employee-db-server:${GITHUB_RUN_NUMBER} .
          docker push norcore/fictional-employee-db-server:${GITHUB_RUN_NUMBER}

      - name: Build Frontend Docker Image
        working-directory: client
        run: |
          docker build -t norcore/fictional-employee-db-client:${GITHUB_RUN_NUMBER} .
          docker push norcore/fictional-employee-db-client:${GITHUB_RUN_NUMBER}

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-setuptools
          python3 -m pip install --user awscli

      - name: Copy Files to S3 Bucket
        run: |
          aws s3 cp client/build s3://my-s3-bucket-rnorbi --recursive
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      - name: Get runner IP address
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Whitelist runner IP address
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{secrets.AWS_EC2_SG}} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: SSH into your EC2 and deploy backend
        run: |
          ssh -i ${{secrets.SSH_KEY}} ec2-user@${{secrets.BACKEND_URL}} 'bash -s' < deploy.sh

      - name: Revoke runner IP address
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{secrets.AWS_EC2_SG}} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32

      # Add more steps for deploying to EC2 or other actions as needed
